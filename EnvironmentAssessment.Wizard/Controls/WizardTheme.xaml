<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:EnvironmentAssessment.Controls" xmlns:Shell="clr-namespace:EnvironmentAssessment.Common.Shell">
    <SolidColorBrush x:Key="White" Color="White" />
    <SolidColorBrush x:Key="Black" Color="Black" />
    <SolidColorBrush x:Key="WindowBackgroundColor" Color="White" />
    <SolidColorBrush x:Key="WindowBorderColor" Color="#859fa1" />
    <SolidColorBrush x:Key="LightLightGray" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="LightGray" Color="#e6e6e6" />
    <SolidColorBrush x:Key="MediumLightGray" Color="#b6b6b6" />
    <SolidColorBrush x:Key="MediumGray" Color="#999999" />
    <SolidColorBrush x:Key="DarkGray" Color="#666666" />
    <SolidColorBrush x:Key="ExtraLightAccent" Color="#ebf6f9" />
    <SolidColorBrush x:Key="LightLightAccent" Color="#b2dde7" />
    <SolidColorBrush x:Key="LightAccent" Color="#e6f1f1" />
    <SolidColorBrush x:Key="MediumAccent" Color="#FF74abaf" />
    <SolidColorBrush x:Key="DarkAccent" Color="#468686" />
    <SolidColorBrush x:Key="DarkDarkAccent" Color="#3e7676" />
    <SolidColorBrush x:Key="ToolTipBackground" Color="#ffffffe1" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="Black" />

    <Style x:Key="WizardPageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource LightGray}" />
        <Setter Property="Foreground" Value="{DynamicResource Black }" />
        <!-- <Setter Property="OverridesDefaultStyle" Value="True" /> -->
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <AccessText Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource LightAccent}" />
                <Setter Property="Foreground" Value="{DynamicResource Black}" />
                <!-- <Setter Property="Template"><Setter.Value><ControlTemplate TargetType="Button"><Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource MediumAccent}" BorderThickness="1"><ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" /></Border></ControlTemplate></Setter.Value></Setter> -->
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource LightAccent}" />
                <Setter Property="Foreground" Value="{DynamicResource Black}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource LightLightGray}" />
                <Setter Property="Foreground" Value="{DynamicResource MediumGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WizardNextPreviousButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource MediumAccent}" />
        <Setter Property="Foreground" Value="{DynamicResource White}" />
        <!-- <Setter Property="OverridesDefaultStyle" Value="True" /> -->
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <AccessText Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkAccent}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowBackgroundColor}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkAccent}" />
                <Setter Property="Foreground" Value="{DynamicResource WindowBackgroundColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource MediumGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WizardOKCancelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WizardNextPreviousButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource MediumGray}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource DarkGray}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource DarkGray}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource MediumGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="WizardControlTemplate" TargetType="{x:Type Window}">
        <Border Name="WindowBorder" Background="{DynamicResource WindowBackgroundColor}" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
            <Grid SnapsToDevicePixels="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Controls:CaptionButtons Margin="0,0,8,0" Grid.Row="0" HorizontalAlignment="Right" Foreground="{DynamicResource MediumGray}" FontSize="14" MarginButton="0,1,0,0" VerticalAlignment="Center" Shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                <ContentPresenter Margin="6" Grid.Row="1" Content="{TemplateBinding Content}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource MediumAccent}"/>
            </Trigger>
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource MediumLightGray}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="WizardStyle" TargetType="{x:Type Controls:Wizard}">
        <Setter Property="Shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <Shell:WindowChrome ResizeBorderThickness="6" CaptionHeight="30" GlassFrameThickness="1,2,1,1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource WizardControlTemplate}"/>
    </Style>
    <ControlTemplate x:Key="DialogControlTemplate" TargetType="{x:Type Window}">
        <Border Name="WindowBorder" Background="{DynamicResource WindowBackgroundColor}" BorderThickness="1,1,1,1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="{TemplateBinding  Title}" SnapsToDevicePixels="True" Margin="4,3,1,1" FontFamily="Segoe UI" FontSize="13" Foreground="{DynamicResource DarkGray}"/>
                <Controls:CaptionButtons Margin="0,0,8,0" Grid.Row="0" HorizontalAlignment="Right" Foreground="{DynamicResource MediumGray}" FontSize="14" MarginButton="0,1,0,0" VerticalAlignment="Center" Shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                <ContentPresenter Margin="6" Grid.Row="1" Content="{TemplateBinding Content}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource MediumAccent}"/>
            </Trigger>
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource MediumLightGray}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DialogStyle" TargetType="{x:Type Controls:Dialog}">
        <Setter Property="Shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <Shell:WindowChrome ResizeBorderThickness="6" CaptionHeight="30" GlassFrameThickness="1,2,1,1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource DialogControlTemplate}"/>
    </Style>
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource ToolTipForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" Background="{StaticResource ToolTipBackground}" BorderBrush="{StaticResource DarkGray}" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <TextBlock Margin="4,2,4,2" Text="{TemplateBinding Content}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" MaxWidth="280"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="FontSize" Value="12"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="Transparent" BorderBrush="{StaticResource MediumLightGray}" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource LightAccent}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource LightAccent}"/>
                        </Trigger>
                        <!-- <Trigger Property="IsEnabled" Value="false"><Setter Property="Foreground" Value="{DynamicResource MediumAccent}"/></Trigger> -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border BorderThickness="0,0,1,0" BorderBrush="{DynamicResource LightGray}" Background="Transparent">
                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="10,5,5,3" Width="{TemplateBinding Width}" TextAlignment="Left" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"  Grid.ColumnSpan="2" Background="#e1e1e1" BorderBrush="#abadb3" BorderThickness="1"/>
            <!-- <Border  Grid.Column="0" Margin="1"  Background="#FFFFFF"  BorderBrush="#404040" BorderThickness="0,0,1,0" /> -->
            <Path  x:Name="Arrow" Grid.Column="1"      Fill="#404040" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource LightAccent}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MediumAccent}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton  Name="ToggleButton"  Template="{StaticResource ComboBoxToggleButton}"  Grid.Column="2"  Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Border Padding="4,0,0,0">
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </Border>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"  Template="{StaticResource ComboBoxTextBox}"  HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True"  Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup  Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border  x:Name="DropDownBorder" Background="#fff" BorderThickness="1" BorderBrush="{DynamicResource MediumAccent}"/>
                                <!-- <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True"> -->
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="IsOpen" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers/>
    </Style>
    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border  Name="Border" Padding="5,4,5,4" Margin="1,0,1,0" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource LightAccent}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderThickness="1" BorderBrush="{DynamicResource MediumAccent}" Padding="1,1,1,1" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="{DynamicResource DarkDarkAccent}" Margin="0" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource DarkDarkAccent}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource ExtraLightAccent}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource DarkAccent}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource DarkAccent}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource LightLightGray}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource LightGray}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource LightLightGray}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource LightLightGray}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource ExtraLightAccent}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource DarkAccent}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource DarkAccent}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource DarkAccent}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="SelectionBrush" Value="{DynamicResource DarkAccent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="#EEE"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#AAAAAA"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WizardExceptionBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="SelectionBrush" Value="{DynamicResource DarkAccent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderThickness="0">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <!-- <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="#EEE"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#AAAAAA"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers> -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WizardTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="SelectionBrush" Value="{DynamicResource DarkAccent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MediumAccent}"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="#EEE"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#AAAAAA"/>
                            <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Controls:ProgressPanelIconConverter x:Key="ProgressPanelIconConverter"/>

    <DataTemplate x:Key="ProgressActionTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Width="16" Height="16" HorizontalAlignment="Left" Source="{Binding Path=., Converter={StaticResource ProgressPanelIconConverter}}"/>
            <TextBlock Grid.Column="1" Text="{Binding Details}" ToolTip="{Binding Details}"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>